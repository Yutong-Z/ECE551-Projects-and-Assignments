This class is aimed at students who want to build programming skills for use in their research or other technical pursuits. You will spend half the semester learning programming fundamentals in C. Then we introduce C++ and move on to data structures and algorithms. These languages are chosen for the pedagogical benefit of learning to program with “no magic,” for their applications in computer engineering, and because a compiled executable can be very fast. After this course, learning an additional programming language will be much easier!
This course is accessible to novices, as we start from the beginning. However, in order for students to make such impressive learning gains in a single semester, the course moves quite quickly. If you would like to start preparing before the class, we have developed a Coursera specialization, Introduction to Programming in C, although this is not required.
This course will use the “flipped classroom” model for most of the semester. In this model, your homework will be to read and watch the videos in the assigned chapters of AoP. Class time will be primarily spent working problems and practicing programming. If you do not complete in-class exercises during class time, you will need to catch up out of class. Attendance at class is required.
For the programming assignments, we use a mastery learning platform, which means you must demonstrate mastery of each assignment before the next one is released. The assignments are automatically graded, and you can attempt formative assignments as many times as you need to. For programming, this is important because the skills build on each other, and you would not want to progress without a solid foundation.
